query AllProducts($first: IntType = 100, $skip: IntType = 0, $collectionId: ItemId) {
	allProducts(first: $first, skip: $skip, filter: { collection: { eq: $collectionId } }) {
		...ProductLightFragment
	}
	_allProductsMeta(filter: { collection: { eq: $collectionId } }) {
		count
	}
}

query ShopifyProductData($handle: String) {
	shopifyProduct(filter: { handle: { eq: $handle } }) {
		id
		tags
		handle
		title
	}
}

query ProductById($id: ItemId) {
	product(filter: { shopifyProduct: { eq: $id } }) {
		...ProductFragment
	}
}

query AllProductByCollection($collectionId: ItemId, $first: IntType = 100, $skip: IntType = 0) {
	allProducts(first: $first, skip: $skip, filter: { collection: { eq: $collectionId } }) {
		...ProductLightFragment
	}
	_allProductsMeta(filter: { collection: { eq: $collectionId } }) {
		count
	}
}

query AllProductBranding($first: IntType = 100, $skip: IntType = 0) {
	allProductBrandings(first: $first, skip: $skip) {
		id
		text
		smallText
		image {
			...ImageThumbnailFragment
		}
		link {
			... on AboutRecord {
				__typename
				id
				title
				slug
			}
		}
	}
	_allProductBrandingsMeta {
		count
	}
}

query AllProductMetaTypes($first: IntType = 100, $skip: IntType = 0) {
	allProductMetaTypes(first: $first, skip: $skip) {
		id
		position
		title
	}
	_allProductMetaTypesMeta {
		count
	}
}

query AllProductsForMenu($first: IntType = 100, $skip: IntType = 0) {
	allProducts(first: $first, skip: $skip) {
		id
		title
		label
		collection {
			id
			title
			slug
		}
		defaultColor {
			id
			title
		}
		image {
			...ImageMenuFragment
		}
		shopifyProduct {
			...ShopifyProductFragment
		}
	}
	_allProductsMeta {
		count
	}
}

fragment ProductLightFragment on ProductRecord {
	id
	title
	label
	collection {
		id
		title
		slug
		position
	}
	defaultColor {
		id
		title
	}
	image {
		...ImageThumbnailFragment
	}
	imageSecondary {
		...ImageThumbnailFragment
	}
	thumbnailForVariations {
		...VariationThumbnailFragment
	}
	secondaryForVariations {
		...VariationThumbnailFragment
	}
	usp {
		id
		title
		description
	}
	shopifyProduct {
		...ShopifyProductFragment
	}
}

fragment VariationThumbnailFragment on ProductMediaModelRecord {
	id
	variation {
		id
		media {
			...ImageThumbnailFragment
		}
		color {
			id
			title
		}
	}
}

fragment ProductFragment on ProductRecord {
	id
	title
	label
	collection {
		id
		title
		titlePlural
		slug
		position
	}
	defaultColor {
		id
		title
	}
	description {
		blocks
		value
		links
	}
	shortSummary {
		blocks
		value
		links
	}
	description {
		blocks
		value
		links
	}
	image {
		...ImageFragment
	}
	imageSecondary {
		...ImageFragment
	}
	metaTitle
	metaDescription
	usp {
		id
		title
		description
	}
	sections {
		... on ProductMediaBlockRecord {
			id
			text {
				blocks
				value
				links
			}
			productMedia {
				...ProductMediaItemFragment
			}
		}
	}
	metaSections {
		id
		title
		metaType {
			id
			position
			title
		}
		text {
			blocks {
				__typename
				... on SizeGuideBlockRecord {
					id
					image {
						...ImageFragment
					}
					table
				}
			}
			value
			links
		}
	}
	shopifyProduct {
		...ShopifyProductFragment
	}
}

fragment ProductMediaItemFragment on ProductMediaModelRecord {
	id
	title
	altText
	thumbnail {
		...ImageFragment
	}
	variation {
		id
		color {
			id
			title
		}
		media {
			...ImageFragment
		}
	}
}

fragment ShopifyProductFragment on ShopifyProductRecord {
	id
	shopifyId
	title
	tags
	handle
	collections {
		id
		title
		handle
	}
	image {
		...ImageFragment
	}
	variants
}
